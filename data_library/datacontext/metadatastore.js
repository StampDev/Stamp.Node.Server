/// <reference path="../../typings/tsd.d.ts" />
var breeze_sequel = require('breeze-sequelize');
var breeze = breeze_sequel.breeze;
//import breeze = require('breeze-client');
var metadata = require('./metadata');
var DT = breeze.DataType;
var Identity = breeze.AutoGeneratedKeyType.Identity;
var Validator = breeze.Validator;
var camelCaseConvention = breeze.NamingConvention.none;
// Breeze Labs: breeze.metadata.helper.js
var helper = new breeze_sequel.breeze.config.MetadataHelper();
// Helper convenience methods
var addDataService = helper.addDataService.bind(helper);
var addTypeToStore = helper.addTypeToStore.bind(helper);
var setDefaultNamespace = helper.setDefaultNamespace.bind(helper);
var dataNameSpace = 'BushidoDB';
var DataStore;
(function (DataStore) {
    DataStore.Store = new breeze.MetadataStore({ namingConvention: camelCaseConvention });
    addDataService(DataStore.Store, 'DataStore');
    setDefaultNamespace('BushidoDB');
    function add_dataStore(typeDefinition) {
        addTypeToStore(DataStore.Store, typeDefinition);
    }
    //1. User
    add_dataStore({
        namespace: dataNameSpace,
        shortName: 'occp',
        defaultResourceName: 'occp',
        autoGeneratedKeyType: breeze.AutoGeneratedKeyType.None,
        dataProperties: {
            ID: { dataType: breeze.DataType.String, isPartOfKey: true },
            OCCPCONCEPT_EN: { maxLength: 4000 },
        }
    });
})(DataStore = exports.DataStore || (exports.DataStore = {}));
//# sourceMappingURL=metadatastore.js.map